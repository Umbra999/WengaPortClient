using UnityEngine;
using MelonLoader;
using WengaPort.Api;
using WengaPort.Wrappers;
using WengaPort.Buttons;
using UnityEngine.UI;
using WengaPort.Modules;
using VRC.SDKBase;
using System.Collections.Generic;
using VRCSDK2;
using static VRC.SDKBase.VRC_EventHandler;
using WengaPort.Extensions;
using WengaPort.FoldersManager;
using Logger = WengaPort.Extensions.Logger;
using System.Threading;
using System.Collections;

namespace WengaPort.Buttons
{
    class ExploitMenu
    {
        public static QMNestedButton ThisMenu;
        public static QMSingleButton HalfButton;
        public static QMToggleButton QuestToggle;

        public static void Initialize()
        {
            ThisMenu = new QMNestedButton(MainMenu.ThisMenu, 3.5f, 1f, "Exploits", "Fun/Exploit Utils", null, null, null, Color.yellow);

            new QMToggleButton(ThisMenu, 1, 0, "Earrape", () =>
            {
                USpeaker.field_Internal_Static_Single_1 = float.MaxValue;
            }, "Disabled", () =>
            {
                USpeaker.field_Internal_Static_Single_1 = 1f;
            }, "Very loud Mic");

            new QMToggleButton(ThisMenu, 2, 0, "Avatar \nCrash", () =>
            {
                MelonCoroutines.Start(AvatarCrashOn());
            }, "Disabled", () =>
            {
                MelonCoroutines.Start(AvatarCrashOff());
            }, "Crash the World with a Avatar");

            new QMToggleButton(ThisMenu, 3, 0, "Infinite \nTimer", () =>
            {
                CameraHandler.TakePicture(int.MaxValue);
                CameraHandler.AnnoyingCam = true;
            }, "Disabled", () =>
            {
                CameraHandler.Enable();
                CameraHandler.AnnoyingCam = false;
            }, "Infinite Camera Timer Sound");

            new QMToggleButton(ThisMenu, 4, 0, "Disconnect \nMaster", () =>
            {
                Modules.Photon.DisconnectToggle = true;
            }, "Disabled", () =>
            {
                Modules.Photon.DisconnectToggle = false;
            }, "Toggle Master Logout");

            new QMToggleButton(ThisMenu, 4, 1, "Debug \nSpam", () =>
            {
                Modules.Photon.DebugSpamToggle = true;
            }, "Disabled", () =>
            {
                Modules.Photon.DebugSpamToggle = false;
            }, "Spam RPCs");

            new QMToggleButton(ThisMenu, 1, 1, "Mirror \nSpam", () =>
            {
                RoomCleaner.MirrorSpam = true;
            }, "Disabled", () =>
            {
                RoomCleaner.MirrorSpam = false;
            }, "Spam all Mirrors in the World");

            new QMToggleButton(ThisMenu, 1, 2, "Floor \nRemover", () =>
            {
                CameraHandler.FloorRemover = true;
                MelonCoroutines.Start(CameraHandler.PortalFloorRemover());
            }, "Disabled", () =>
            {
                CameraHandler.FloorRemover = false;
            }, "Disable the Floor");

            new QMToggleButton(ThisMenu, 3, 2, "Menu \nRemover", () =>
            {
                CameraHandler.MenuRemover = true;
                MelonCoroutines.Start(CameraHandler.PortalMenuRemover());
            }, "Disabled", () =>
            {
                CameraHandler.MenuRemover = false;
            }, "Disable the Floor");

            new QMToggleButton(ThisMenu, 2, 1, "Drop \nItems", () =>
            {
                ItemHandler.AutoDropItems = true;
            }, "Disabled", () =>
            {
                ItemHandler.AutoDropItems = false;
            }, "Auto Drop all Items");

            new QMToggleButton(ThisMenu, 3, 1, "Emoji \nSpam", () =>
            {
                Modules.Photon.EmojiSpam = true;
            }, "Disabled", () =>
            {
                Modules.Photon.EmojiSpam = false;
            }, "Spam a Emoji");

            object NoItemPickUpEnum = new object();    

            HalfButton = new QMSingleButton(ThisMenu, 4, 1.75f, "Cam \nCrash", () =>
            {
                MelonCoroutines.Start(CameraHandler.CameraCrash());
            }, "Crash the World with Camera");
            HalfButton.getGameObject().GetComponent<RectTransform>().sizeDelta /= new Vector2(1, 2);

            HalfButton = new QMSingleButton(ThisMenu, 4, 2.25f, "Change \nPedestals", () =>
            {
                RoomCleaner.ChangePedestals("avtr_f9f09b3c-98ef-4329-8046-e5f2e284390f");
            }, "Change all Avatar Pedestals");
            HalfButton.getGameObject().GetComponent<RectTransform>().sizeDelta /= new Vector2(1, 2);

            QuestToggle = new QMToggleButton(ThisMenu, 2, 2, "Quest \nSpoof", () =>
            {
                Create.Ini.SetBool("Toggles", "QuestSpoof", true);
                Logger.WengaLogger("Quest Spoof enabled - Restart your Game to take effect");
            }, "Disabled", () =>
            {
                Create.Ini.SetBool("Toggles", "QuestSpoof", false);
                Logger.WengaLogger("Quest Spoof disabled - Restart your Game to take effect");
            }, "Spoof yourself to Quest Platform");

            new QMToggleButton(ThisMenu, 5, 0, "Invisible \nJoin", () =>
            {
                Modules.Photon.Invisible = true;
            }, "Disabled", () =>
            {
                Modules.Photon.Invisible = false;
            }, "Join yourself without Instantiating");
        }

        public static string BackAvatarID;
        public static IEnumerator AvatarCrashOff()
        {
            PlayerExtensions.ChangeAvatar(BackAvatarID);
            yield return new WaitForSeconds(2);
            SelfHide.Initialize(false);
            PlayerExtensions.ReloadAvatar(Utils.CurrentUser);
            yield break;
        }

        public static IEnumerator AvatarCrashOn()
        {
            BackAvatarID = Utils.CurrentUser.GetAPIAvatar().id;
            yield return new WaitForSeconds(2);
            PlayerExtensions.ChangeAvatar("avtr_72b727e2-40f9-4934-8c49-b8dfd545e2ab");
            SelfHide.Initialize(true);
            yield break;
        }
        public static void ButtonToggles()
        {
            try
            {
                if (PatchManager.VRMode)
                {
                    SafetyMenu.VRToggle.setToggleState(true, false);
                }
                else
                {
                    SafetyMenu.VRToggle.setToggleState(false, false);
                }
                if (Create.Ini.GetBool("Toggles", "QuestSpoof", true))
                {
                    QuestToggle.setToggleState(true, false);
                }
                else
                {
                    QuestToggle.setToggleState(false, false);
                }
            }
            catch
            { }
        }
    }
}

